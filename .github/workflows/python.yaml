on:
  workflow_call:
    inputs:
      package-name:
        required: true
        type: string
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: pip

      - name: Install build tool
        run: pip install build

      - name: Build ${{ inputs.package-name }}
        run: python -m build

      - name: Upload ${{ inputs.package-name }} package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.package-name }}
          path: ./dist/

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: pip

      - name: Download ${{ inputs.package-name }} package
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.package-name }}
          path: ./dist/

      - name: Install ${{ inputs.package-name }}
        run: pip install ./dist/*.whl

      - name: Install test runner
        run: pip install pytest pytest-cov

      - name: Run unit tests
        run: pytest --cov=${{ inputs.package-name }}

  publish:
    strategy:
      matrix:
        include:
          # Publish package to PyPI when a GitHub release is published.
          - if: github.event_name == 'release' && github.event.action == 'published'
            name: pypi
            url: https://pypi.org/p/${{ inputs.package-name }}
            repository-url: https://upload.pypi.org/legacy/

          # Publish package to TestPyPI when a git tag is pushed.
          - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
            name: testpypi
            url: https://test.pypi.org/p/${{ inputs.package-name }}
            repository-url: https://test.pypi.org/legacy/
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: ${{ matrix.name }}
      url: ${{ matrix.url }}
    permissions:
      id-token: write
    steps:
      - name: Download ${{ inputs.package-name }} package
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.package-name }}
          path: ./dist/

      - name: Publish ${{ inputs.package-name }} to PyPI
        if: ${{ matrix.if }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ matrix.repository-url }}
          print-hash: true
