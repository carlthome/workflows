on:
  workflow_call:
    inputs:
      attribute:
        type: string
        description: "Flake output attribute to build"
        default: ".#default"
      cachix-cache:
        type: string
        description: "Cachix cache"
        default: ""
      runs-on:
        type: string
        description: "GitHub Actions runner"
        default: ubuntu-22.04
      update:
        type: boolean
        description: "Update flake inputs and push new flake.lock"
        default: false
      upload:
        type: boolean
        description: "Upload build results to GitHub"
        default: true
    secrets:
      cachix-token:
        description: "Cachix token"
        required: false

jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - run: git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
      - run: git config --global user.name "${GITHUB_ACTOR}"
      - uses: DeterminateSystems/flake-checker-action@v7
      - uses: DeterminateSystems/nix-installer-action@v12
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@v15
        if: ${{ inputs.cachix-cache }}
        with:
          name: ${{ inputs.cachix-cache }}
          authToken: ${{ secrets.cachix-token }}
      - run: nix flake metadata
      - run: nix flake show
      - if: ${{ inputs.update }}
        run: nix flake update --commit-lock-file
      - run: nix flake check --keep-going --all-systems
      - run: nix build --print-build-logs ${{ inputs.attribute }}
      - if: ${{ inputs.update }}
        run: git push
      - run: echo "path=$(readlink result)" >> "$GITHUB_ENV"
      - run: echo "name=$(nix eval --raw ${{ inputs.attribute }}.name)" >> "$GITHUB_ENV"
      - if: ${{ inputs.upload }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.name }}
          path: ${{ env.path }}
